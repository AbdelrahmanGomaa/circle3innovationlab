@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<ContentModels.Courses>
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@using Umbraco.Cms.Core.Models
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor


@{
    Layout = "MasterTemplate.cshtml";

    // 1. جيب صفحة "Courses" الرئيسية
    var coursesHome = Umbraco.Content(Guid.Parse("b8b5cd93-fb63-4b46-9b77-e618dc047eee")); // GUID بتاع صفحة Courses

    // 2. جيب كل التخصصات (IT, Marketing, Design…)
    var categories = coursesHome?.Children().Where(x => x.IsVisible());

    // 3. اجمع كل الكورسات من كل تخصص
    var allCourses = new List<IPublishedContent>();
    var allCoursesFilter = new List<dynamic>();

    foreach (var category in categories)
    {
        var courses = category.ChildrenOfType("courseDetails").Where(x => x.IsVisible());

        allCourses.AddRange(courses);
        foreach (var course in courses)
        {
            allCoursesFilter.Add(new
            {
                Course = course,
                Category = category.Name
            });
        }
    }
    // 4. ترتيبهم حسب آخر تعديل
        var sortedCourses = allCourses.OrderByDescending(x => x.UpdateDate);
        var sortedCoursesFilter = allCoursesFilter.OrderByDescending(x => x.UpdateDate);


    
    var pageSize = 6;
    int page;

    if (!int.TryParse(HttpContextAccessor.HttpContext.Request.Query["page"], out page))
    {
        page = 1;
    }

    var totalNodes = allCourses.Count();
    var totalPages = (int)Math.Ceiling((double)totalNodes / pageSize);

    if (page > totalPages)
    {
        page = totalPages;
    }
    else if (page < 1)
    {
        page = 1;
    }

    var paginatedItems = allCourses.Skip((page - 1) * pageSize).Take(pageSize);


}







    <!-- ================================
    START BREADCRUMB AREA
================================= -->
    <section class="breadcrumb-area section-padding img-bg-2">
      <div class="overlay"></div>
      <div class="container">
        <div
          class="breadcrumb-content d-flex flex-wrap align-items-center justify-content-between"
        >
          <div class="section-heading">
            <h2 class="section__title text-white">Course List</h2>
          </div>
          <ul class="generic-list-item generic-list-item-white generic-list-item-arrow d-flex flex-wrap align-items-center">
            <li><a href="index.html">Home</a></li>
            <li>Courses</li>
            <li>Course List</li>
          </ul>
        </div>
        <!-- end breadcrumb-content -->
      </div>
      <!-- end container -->
    </section>
    <!-- end breadcrumb-area -->
    <!-- ================================
    END BREADCRUMB AREA
================================= -->

    <!--======================================
        START COURSE AREA
======================================-->
            <section class="course-area section-padding">
              <div class="container">

        <div class="filter-bar mb-4">
            <div class="filter-bar-inner d-flex flex-wrap align-items-center justify-content-between">
                <p class="fs-14">
                    We found <span class="text-black">@totalNodes</span> courses available for
                    you
                </p>
                <div class="d-flex flex-wrap align-items-center">
                   
                    <div class="select-container select--container me-3">
                        <select class="select-container-select" id="categoryFilter">
                            <option value="all">All Categories</option>

                            @foreach (var category in categories)
                            {
                                <option value="@category.UrlSegment">@category.Name.ToLower().Replace(" ", "-")</option>

                            }
                          
                        </select>
                    </div>

                </div>
            </div>
            <!-- end filter-bar-inner -->

            </div>
                    <div class="row">



            @foreach (var item in paginatedItems)
            {
                var parentCategory = item.Parent?.Name; // اسم التخصص

                var category = item.Parent?.Name.ToLower().Replace(" ", "-");
                var categorySlug = item.Parent?.UrlSegment;

                var CourseImageIt = item.Value<MediaWithCrops>("courseImage");



                <div class="col-lg-4 responsive-column-half" data-category="@categorySlug">
                    <div class="card card-item card-preview "
                         data-tooltip-content="#tooltip_content_1">
                        <div class="card-image">
                            <a href="@item.Url()" class="d-block">
                                <img class="card-img-top lazy"
                                     src="@CourseImageIt?.MediaUrl()"
                                     data-src="@CourseImageIt?.MediaUrl()"
                                     alt="Card image cap" />
                            </a>
                            <div class="course-badge-labels">

                                @if (item.HasValue("courseTags"))
                                {


                                    var tags = item.Value<IEnumerable<string>>("courseTags");
                                    var index = 0;


                                    @foreach (var tag in tags)
                                    {
                                        if (index % 2 == 0)
                                        {
                                            <div class="course-badge">@tag</div>
                                        }
                                        else
                                        {
                                            <div class="course-badge blue">@tag</div>
                                        }
                                        index++;
                                    }

                                }
                            </div>
                        </div>
                        <!-- end card-image -->
                        <div class="card-body">
                            <h6 class="ribbon ribbon-blue-bg fs-14 mb-3">@item.Value("courseLevel")</h6>
                            <h5 class="card-title">
                                <a href="@item.Url()">@item.Name()</a>
                            </h5>
                            <p class="card-text">
                                <a href="teacher-detail.html">@parentCategory</a>
                            </p>

                            <div class="rating-wrap d-flex align-items-center py-2">
                                <div class="review-stars">

                                    @if (item.HasValue("courseDescountNote"))
                                    {

                                        <span class="rating-number">@item.Value("courseDescountNote")</span>
                                    }
                                </div>

                            </div>
                            <!-- end rating-wrap -->
                            <div class="d-flex justify-content-between align-items-center">
                                <p class="card-price text-black font-weight-bold">
                                    @item.Value("coursePrice")
                                    @if (item.HasValue("courseOldPrice"))
                                    {
                                        <span class="before-price font-weight-medium">@item.Value("courseOldPrice")</span>
                                    }
                                </p>
                                <div class="icon-element icon-element-sm shadow-sm cursor-pointer"
                                     title="Add to Wishlist">
                                    <i class="la la-heart-o"></i>
                                </div>
                            </div>
                        </div>
                        <!-- end card-body -->
                    </div>
                    <!-- end card -->
                </div>
                <!-- end col-lg-4 -->
            }
            
                    </div>
                    <!-- end row -->
        
        <div class="text-center pt-3">
            <nav aria-label="Page navigation example" class="pagination-box">
                <ul class="pagination justify-content-center">

                    <!-- Previous -->
                    <li class="page-item @(page <= 1 ? "disabled" : "")">
                        <a class="page-link" href="@(page > 1 ? (page - 1 == 1 ? "/courses" : $"/courses?page={page - 1}") : "#")" aria-label="Previous">
                            <span aria-hidden="true"><i class="la la-arrow-left"></i></span>
                            <span class="sr-only">Previous</span>
                        </a>
                    </li>

                    <!-- Pages -->
                    @for (int i = 1; i <= totalPages; i++)
                    {
                        <li class="page-item @(i == page ? "active" : "")">
                            <a class="page-link" href="@(i == 1 ? "/courses" : $"/courses?page={i}")">@i</a>
                        </li>
                    }

                    <!-- Next -->
                    <li class="page-item @(page >= totalPages ? "disabled" : "")">
                        <a class="page-link" href="@(page < totalPages ? $"/courses?page={page + 1}" : "#")" aria-label="Next">
                            <span aria-hidden="true"><i class="la la-arrow-right"></i></span>
                            <span class="sr-only">Next</span>
                        </a>
                    </li>

                </ul>
            </nav>







            @{
                var startItem = ((page - 1) * pageSize) + 1;
                var endItem = Math.Min(startItem + pageSize - 1, totalNodes);
            }
            <p class="fs-14 pt-2">Showing @startItem-@endItem of @totalNodes results</p>


        </div>
      </div>
      <!-- end container -->
    </section>
    <!-- end courses-area -->
    <!--======================================
        END COURSE AREA
======================================-->
@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const categoryFilter = document.getElementById('categoryFilter');

            if (categoryFilter) {
                // لما يحصل تغيير بالـ Select2
                $(categoryFilter).on('select2:select', function (e) {
                    const selectedCategory = e.params.data.id.toLowerCase();
                    console.log("Selected category (Select2):", selectedCategory);

                    const cards = document.querySelectorAll('.responsive-column-half');

                    cards.forEach(function (card) {
                        const cardCategory = card.getAttribute('data-category')?.toLowerCase();
                        console.log("Card Category:", cardCategory);

                        if (selectedCategory === "all" || cardCategory === selectedCategory) {
                            card.style.display = "block";
                        } else {
                            card.style.display = "none";
                        }
                    });
                });
            }
        });
    </script>
}

